{
  "_args": [
    [
      {
        "raw": "infrared",
        "scope": null,
        "escapedName": "infrared",
        "name": "infrared",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/jacob/Documents/RICH"
    ]
  ],
  "_from": "infrared@latest",
  "_id": "infrared@0.0.4",
  "_inCache": true,
  "_location": "/infrared",
  "_npmUser": {
    "name": "pmgration",
    "email": "pmgration@gmail.com"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {},
  "_requested": {
    "raw": "infrared",
    "scope": null,
    "escapedName": "infrared",
    "name": "infrared",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/infrared/-/infrared-0.0.4.tgz",
  "_shasum": "c6957049ac0909588767ab913ba58ab8be5c5c52",
  "_shrinkwrap": null,
  "_spec": "infrared",
  "_where": "/home/jacob/Documents/RICH",
  "author": {
    "name": "Paul Gration",
    "email": "pmgration@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/pmgration/node-infrared/issues"
  },
  "dependencies": {
    "pty.js": ">=0.2.3"
  },
  "description": "Node infrared control",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "c6957049ac0909588767ab913ba58ab8be5c5c52",
    "tarball": "https://registry.npmjs.org/infrared/-/infrared-0.0.4.tgz"
  },
  "homepage": "https://github.com/pmgration/node-infrared#readme",
  "keywords": [
    "infrared"
  ],
  "main": "./infrared",
  "maintainers": [
    {
      "name": "pmgration",
      "email": "pmgration@gmail.com"
    }
  ],
  "name": "infrared",
  "optionalDependencies": {},
  "readme": "# node-infrared\n\n\nWrapper for lirc\n\nMost common usage:\n\n    var callback = function(error, stdout, stderr) {\n      if(error) {\n        console.log('error: ' + error);\n      }\n      if(stdout) {\n        console.log('stdout: ' + stdout);\n      }\n      if(stderr) {\n        console.log('stderr: ' + stderr);\n      }\n    }\n    ...\n\n## Using IRSend\n\n    var IRSend = require('infrared').irsend;\n\n    var irsend = new IRSend();\n    irsend.list('', '', callback);\n\n## Using IRRecord (may require elevated privileges)\n\n    var IRRecord = require('infrared').irrecord;\n    \n    var irrecord = new IRRecord();\n    irrecord.on('stdout', function(data) {\n      console.log(data);\n    });\n    irrecord.on('stderr', function(data) {\n      console.log(data);\n    });\n    irrecord.on('exit', function() {\n      // handle exit event\n    });\n    irrecord.start('remote', {disable_namespace: true});\n\n    /*\n    setTimeout(function() {\n      irrecord.quit();\n    }, 5000);\n    */\n\n## Using IRW\n\n    var IRW = require('infrared').irw;\n\n    var irw = new IRW();\n    irw.on('stdout', function(data) {\n      console.log(data);\n    });\n    irw.on('stderr', function(data) {\n      console.log(data);\n    });\n    // etc\n\nIf the distribution of linux isn't automatically handling the creation\nof lircd instances or more are required these can also be created\n(may need elevated privileges depending on where the lircd socket file\nis to reside and whether uinput is required).\n\n    var LIRCD = require('infrared').lircd;\n    var IRRecord = require('infrared').irrecord;\n    var IRSend = require('infrared').irsend;\n\n    var receiver1 = new LIRCD({device: 'serial=00000001',\n      output: 'receiver1',\n      pidfile: 'receiver1.pid',\n      logfile: 'receiver1.log'\n    });\n    var transmitter1 = new LIRCD({device: 'serial=00000002',\n      output: 'transmitter1',\n      pidfile: 'transmitter1.pid',\n      logfile: 'transmitter1.log'\n    });\n    var transmitter2 = new LIRCD({device: 'serial=01234567',\n      output: 'transmitter2',\n      pidfile: 'transmitter2.pid',\n      logfile: 'transmitter2.log'\n    });\n    \n    var rx1 = new IRRecord({device: 'receiver1'});\n    rx1.on('stdout', function(data) {\n      // handle output\n    });\n    \n    var tx1 = new IRSend({device: 'transmitter1'});\n    var tx2 = new IRSend({device: 'transmitter2'});\n    \n    receiver1.on('running', function() {\n      rx1.start('remote');\n      // etc\n    });\n        \n    transmitter1.on('running', function() {\n      tx1.list('', '', callback);\n    });\n          \n    transmitter2.on('running', function() {\n      tx2.send_once('remote', 'code', callback);\n    });\n\n    receiver1.start();\n    transmitter1.start();\n    transmitter2.start();\n\nMore features to come...\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/pmgration/node-infrared.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.4"
}
